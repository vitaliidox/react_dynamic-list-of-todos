{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api/request/request.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","setQuery","setSelectedFilter","onChange","event","target","value","placeholder","style","pointerEvents","Loader","request","point","fetch","then","response","json","TodoModal","useState","user","setUser","url","userId","useEffect","data","href","email","name","App","All","Active","Completed","setTodos","selectedFilter","isLoaded","setisLoaded","todosPoint","useMemo","finally","filterTodos","filter","filterTodosByQuery","includes","toLowerCase","phrase","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60595ea8.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map(todo => (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"has-background-info-light\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed ? (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                ) : ''}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far fa-eye${selectedTodo?.id === todo.id ? '-slash' : ''}`} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  setSelectedFilter: (filter: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setSelectedFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setSelectedFilter(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query !== '' ? (\n            <button\n              aria-label=\"reset\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          ) : ''}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nexport const request = (point: string) => {\n  return fetch(`https://mate-academy.github.io/react_dynamic-list-of-todos/api/${point}.json`)\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { request } from '../../api/request';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  const url = selectedTodo?.userId;\n\n  useEffect(() => {\n    request(`users/${url}`)\n      .then(data => setUser(data));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"delete\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { request } from './api/request';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const { All, Active, Completed } = Filter;\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedFilter, setSelectedFilter] = useState<string>(All);\n  const [query, setQuery] = useState('');\n  const [isLoaded, setisLoaded] = useState(false);\n\n  const todosPoint = useMemo(() => 'todos', []);\n\n  useEffect(() => {\n    setisLoaded(false);\n    request(todosPoint)\n      .then(data => {\n        setTodos(data);\n      })\n      .finally(() => setisLoaded(true));\n  }, []);\n\n  const filterTodos = useMemo(() => todos.filter((todo) => {\n    switch (selectedFilter) {\n      case Completed:\n        return todo.completed === true;\n      case Active:\n        return todo.completed === false;\n      default:\n        return todo;\n    }\n  }), [selectedFilter, todos]);\n\n  const filterTodosByQuery = useMemo(() => filterTodos.filter((todo) => todo.title.includes(query.toLowerCase())), [query, filterTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={(phrase) => setQuery(phrase)}\n                setSelectedFilter={(filter: string) => setSelectedFilter(filter)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded ? (\n                (todos.length !== 0 && (\n                  <TodoList\n                    todos={filterTodosByQuery}\n                    setSelectedTodo={(todo: Todo) => setSelectedTodo(todo)}\n                    selectedTodo={selectedTodo}\n                  />\n                )) || (\n                  <h2 className=\"has-text-danger bold\">\n                    Something went wrong or to-dos list is empty!\n                  </h2>\n                )\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={(todo: null) => setSelectedTodo(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}